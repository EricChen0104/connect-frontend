{"ast":null,"code":"import axios from \"axios\";\n// const API_URL = \"https://connect-api-p3po.onrender.com/api/posts\";\n// const API_URL_Unregister =\n//   \"https://connect-api-p3po.onrender.com/api/unregister\";\nconst API_URL = \"http://localhost:8081/api/posts\";\nconst API_URL_Unregister = \"http://localhost:8081/api/unregister\";\nclass PostService {\n  post(title, description) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {\n      title,\n      description\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  get(_id) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/profile/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  getAll() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL_Unregister + \"/\", {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  getOtherProfilePost(_id) {\n    return axios.get(API_URL_Unregister + \"/profile/\" + _id);\n  }\n  liked(userId, postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + \"/like\", {\n      userId,\n      postId\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  getComment(postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL_Unregister + \"/comment/\" + postId, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  commentLike(userId, commentId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + \"/comment/like\", {\n      userId,\n      commentId\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  writeComment(postId, commentText) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL + \"/comment\", {\n      postId,\n      commentText\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  getCurrentViewPost(_id) {\n    return axios.get(API_URL_Unregister + \"/getPost/\" + _id, {});\n  }\n  getWriterProfile() {\n    return JSON.parse(localStorage.getItem(\"otherProfile\"));\n  }\n  edit(title, description, postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.patch(API_URL + \"/\" + postId, {\n      title,\n      description\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  delete(postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/\" + postId, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\nexport default new PostService();","map":{"version":3,"names":["axios","API_URL","API_URL_Unregister","PostService","post","title","description","token","localStorage","getItem","JSON","parse","headers","Authorization","get","_id","getAll","getOtherProfilePost","liked","userId","postId","getComment","commentLike","commentId","writeComment","commentText","getCurrentViewPost","getWriterProfile","edit","patch","delete"],"sources":["/Users/ericchen980104/Desktop/nodeJS/112T2-專案課-social-media/client/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\n// const API_URL = \"https://connect-api-p3po.onrender.com/api/posts\";\n// const API_URL_Unregister =\n//   \"https://connect-api-p3po.onrender.com/api/unregister\";\nconst API_URL = \"http://localhost:8081/api/posts\";\nconst API_URL_Unregister = \"http://localhost:8081/api/unregister\";\n\nclass PostService {\n  post(title, description) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(\n      API_URL,\n      { title, description },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  get(_id) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/profile/\" + _id, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  getAll() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL_Unregister + \"/\", {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  getOtherProfilePost(_id) {\n    return axios.get(API_URL_Unregister + \"/profile/\" + _id);\n  }\n\n  liked(userId, postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(\n      API_URL + \"/like\",\n      { userId, postId },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  getComment(postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL_Unregister + \"/comment/\" + postId, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  commentLike(userId, commentId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(\n      API_URL + \"/comment/like\",\n      { userId, commentId },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  writeComment(postId, commentText) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(\n      API_URL + \"/comment\",\n      { postId, commentText },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  getCurrentViewPost(_id) {\n    return axios.get(API_URL_Unregister + \"/getPost/\" + _id, {});\n  }\n\n  getWriterProfile() {\n    return JSON.parse(localStorage.getItem(\"otherProfile\"));\n  }\n\n  edit(title, description, postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.patch(\n      API_URL + \"/\" + postId,\n      { title, description },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  delete(postId) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/\" + postId, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n}\n\nexport default new PostService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}